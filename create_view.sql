USE DATABASE DATA_SHARING_RATINGS;
USE SCHEMA PRIVATE_SHARE;
CREATE OR REPLACE SECURE VIEW RATING_DETAILS AS
SELECT R.USERID,M.MOVIEID, M.TITLE, M.GENRES, R.RATING, R.TIMESTAMP
FROM MOVIE_LENS.RATINGS R
INNER JOIN MOVIE_LENS.MOVIES M ON M.MOVIEID = R.MOVIEID
WHERE EXISTS (SELECT 1
              FROM MOVIE_LENS.PERMISSIONS P
              WHERE (P.USERID = R.USERID
              AND P.ACCOUNTNAME=CURRENT_ACCOUNT())
              OR  CURRENT_ACCOUNT()='PM');
GRANT SELECT ON VIEW RATING_DETAILS TO SHARE RATINGS;

USE SCHEMA PRIVATE_SHARE;
CREATE OR REPLACE SECURE VIEW AVERAGE_RATINGS AS
SELECT M.TITLE AS "TITLE"
   ,AVG(R.RATING)::DECIMAL(2,1) AS "AVG_RATING"
   ,COUNT(R.MOVIEID) AS "CNT_RATING"
   ,MAX(TIMESTAMP) AS "LATEST_RATING"
FROM MOVIE_LENS.MOVIES M
LEFT JOIN (SELECT *
           FROM MOVIE_LENS.RATINGS
           WHERE EXISTS (SELECT 1
                      FROM MOVIE_LENS.PERMISSIONS P
                      WHERE (P.ACCOUNTNAME=CURRENT_ACCOUNT())
                      OR  CURRENT_ACCOUNT()='PM')) R ON R.MOVIEID = M.MOVIEID
GROUP BY M.TITLE;
GRANT SELECT ON VIEW AVERAGE_RATINGS TO SHARE RATINGS;

USE SCHEMA PUBLIC_SHARE;
CREATE OR REPLACE SECURE VIEW MOVIES AS
SELECT MOVIEID,
       TITLE,
       GENRES
FROM MOVIE_LENS.MOVIES;
GRANT SELECT ON VIEW MOVIES TO SHARE RATINGS;
