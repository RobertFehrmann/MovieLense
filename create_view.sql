USE DATABASE DATA_SHARING_RATINGS;
USE SCHEMA PRIVATE_SHARE;
CREATE OR REPLACE SECURE VIEW RATING_DETAIL AS
SELECT R.RATINGSOURCEID,M.MOVIEID, M.TITLE, M.GENRES, R.RATING, R.TIMESTAMP
FROM MOVIE_LENS.RATING R
INNER JOIN MOVIE_LENS.MOVIES M ON M.MOVIEID = R.MOVIEID
WHERE EXISTS (SELECT 1
              FROM MOVIE_LENS.PERMISSION P
              WHERE (P.USERID = R.USERID
              AND P.ACCOUNTNAME=CURRENT_ACCOUNT())
              OR  CURRENT_ACCOUNT()='PM');
GRANT SELECT ON VIEW RATING_DETAIL TO SHARE RATINGS;

USE SCHEMA PUBLIC_SHARE;
CREATE OR REPLACE SECURE VIEW AVERAGE_RATING AS
SELECT M.TITLE AS "TITLE"
   ,AVG(R.RATING)::DECIMAL(2,1) AS "AVG_RATING"
   ,COUNT(R.MOVIEID) AS "CNT_RATING"
   ,MAX(TIMESTAMP) AS "LATEST_RATING"
FROM MOVIE_LENS.MOVIE M,
     MOVIE_LENS.RATING R ON R.MOVIEID=M.MOVIEID
GROUP BY M.TITLE;
GRANT SELECT ON VIEW AVERAGE_RATING TO SHARE RATINGS;

USE SCHEMA PUBLIC_SHARE;
CREATE OR REPLACE SECURE VIEW MOVIE AS
SELECT RATINGSOURCEID,
       TITLE,
       GENRES 
FROM MOVIE_LENS.MOVIE;
GRANT SELECT ON VIEW MOVIE TO SHARE RATINGS;
